{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;\f4\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red222\green68\blue70;\red19\green149\blue63;\red81\green187\blue188;
\red29\green120\blue250;\red13\green99\blue29;\red41\green101\blue168;\red36\green43\blue141;\red58\green58\blue58;
\red247\green247\blue247;\red38\green38\blue38;\red97\green97\blue97;\red226\green83\blue7;\red202\green29\blue5;
}
\margl1440\margr1440\vieww20280\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 My Notes on Capstone Finance project\
\
\
1)   Changed the following :\
\
#From \
from pandas_datareader import data, wb\
import pandas as pd\
import numpy as np\
import datetime\
%matplotlib inline\
\
#to\
import pandas as pd\
pd.core.common.is_list_like = pd.api.types.is_list_like\
from pandas_datareader import data, wb\
from pandas.api.types import is_list_like\
import numpy as np\
import datetime\
%matplotlib inline\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
2) Did the following:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f1\fs22 \cf0 \CocoaLigature0 pip3 install --upgrade pandas-datareader==0.5.0\
\
Then did the following:  I have replaced google finance with \'91candle\'92\
Reference :\
\
BAC = data.DataReader('BAC', 'quandl', start, end)\
\
Reference:  {\field{\*\fldinst{HYPERLINK "https://github.com/pydata/pandas-datareader/issues/502"}}{\fldrslt https://github.com/pydata/pandas-datareader/issues/502}}\
\
I was getting this error below:\
BAC = data.DataReader('BAC', 'google', start, end)\
\
\
\pard\pardeftab720

\f2\fs28 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 RemoteDataError\cf0 \expnd0\expndtw0\kerning0
                           Traceback (most recent call last)\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
<ipython-input-26-e08f133a38bb>\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
<module>\cf5 \expnd0\expndtw0\kerning0
()\cf0 \expnd0\expndtw0\kerning0
\
\cf3 \expnd0\expndtw0\kerning0
----> 1\cf2 \expnd0\expndtw0\kerning0
 \cf0 \expnd0\expndtw0\kerning0
BAC \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 data\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
DataReader\cf5 \expnd0\expndtw0\kerning0
('BAC',\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
'google',\cf0 \expnd0\expndtw0\kerning0
 start\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 end\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\
\
\cf3 \expnd0\expndtw0\kerning0
/Users/Jayashri/anaconda/lib/python3.6/site-packages/pandas_datareader/data.py\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
DataReader\cf5 \expnd0\expndtw0\kerning0
(name, data_source, start, end, retry_count, pause, session, access_key)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    313
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
                                  chunksize\cf5 \expnd0\expndtw0\kerning0
=\cf4 \expnd0\expndtw0\kerning0
25\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
    314
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
                                  retry_count\cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
retry_count\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 pause\cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
pause\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
--> 315\cf2 \expnd0\expndtw0\kerning0
                                  session=session).read()\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    316
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
 \

\f3\b \cf6 \expnd0\expndtw0\kerning0
    317
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
     \cf3 \expnd0\expndtw0\kerning0
elif\cf0 \expnd0\expndtw0\kerning0
 data_source \cf5 \expnd0\expndtw0\kerning0
==\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
"iex":\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
/Users/Jayashri/anaconda/lib/python3.6/site-packages/pandas_datareader/base.py\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
read\cf5 \expnd0\expndtw0\kerning0
(self)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    204
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf3 \expnd0\expndtw0\kerning0
if\cf0 \expnd0\expndtw0\kerning0
 isinstance\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
symbols\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
compat\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
string_types\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 int\cf5 \expnd0\expndtw0\kerning0
)):\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
    205
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
             df = self._read_one_data(self.url,\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
--> 206\cf2 \expnd0\expndtw0\kerning0
                                      params=self._get_params(self.symbols))\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    207
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf2 \expnd0\expndtw0\kerning0
# Or multiple symbols, (e.g., ['GOOG', 'AAPL', 'MSFT'])\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
    208
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf3 \expnd0\expndtw0\kerning0
elif\cf0 \expnd0\expndtw0\kerning0
 isinstance\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
symbols\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 DataFrame\cf5 \expnd0\expndtw0\kerning0
):\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
/Users/Jayashri/anaconda/lib/python3.6/site-packages/pandas_datareader/base.py\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
_read_one_data\cf5 \expnd0\expndtw0\kerning0
(self, url, params)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
     82
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf5 \expnd0\expndtw0\kerning0
""" read one data from specified URL """\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
     83
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf3 \expnd0\expndtw0\kerning0
if\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_format \cf5 \expnd0\expndtw0\kerning0
==\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
'string':\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
---> 84\cf2 \expnd0\expndtw0\kerning0
             \cf0 \expnd0\expndtw0\kerning0
out \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_read_url_as_StringIO\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
url\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 params\cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
params\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
     85
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         \cf3 \expnd0\expndtw0\kerning0
elif\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_format \cf5 \expnd0\expndtw0\kerning0
==\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
'json':\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
     86
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
             out \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_get_response\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
url\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 params\cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
params\cf5 \expnd0\expndtw0\kerning0
).\cf0 \expnd0\expndtw0\kerning0
json\cf5 \expnd0\expndtw0\kerning0
()\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
/Users/Jayashri/anaconda/lib/python3.6/site-packages/pandas_datareader/base.py\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
_read_url_as_StringIO\cf5 \expnd0\expndtw0\kerning0
(self, url, params)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
     93
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         Open url \cf5 \expnd0\expndtw0\kerning0
(\cf3 \expnd0\expndtw0\kerning0
and\cf0 \expnd0\expndtw0\kerning0
 retry\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
     94
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         """\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
---> 95\cf2 \expnd0\expndtw0\kerning0
         \cf0 \expnd0\expndtw0\kerning0
response \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_get_response\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
url\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 params\cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
params\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
     96
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         text \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 self\cf5 \expnd0\expndtw0\kerning0
.\cf0 \expnd0\expndtw0\kerning0
_sanitize_response\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
response\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
     97
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
         out \cf5 \expnd0\expndtw0\kerning0
=\cf0 \expnd0\expndtw0\kerning0
 StringIO\cf5 \expnd0\expndtw0\kerning0
()\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
/Users/Jayashri/anaconda/lib/python3.6/site-packages/pandas_datareader/base.py\cf0 \expnd0\expndtw0\kerning0
 in \cf4 \expnd0\expndtw0\kerning0
_get_response\cf5 \expnd0\expndtw0\kerning0
(self, url, params, headers)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    153
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
             msg \cf5 \expnd0\expndtw0\kerning0
+=\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
'\\nResponse Text:\\n\{0\}'.\cf0 \expnd0\expndtw0\kerning0
format\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
last_response_text\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\

\f3\b \cf6 \expnd0\expndtw0\kerning0
    154
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
 \
\pard\pardeftab720
\cf3 \expnd0\expndtw0\kerning0
--> 155\cf2 \expnd0\expndtw0\kerning0
         \cf3 \expnd0\expndtw0\kerning0
raise\cf0 \expnd0\expndtw0\kerning0
 RemoteDataError\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
msg\cf5 \expnd0\expndtw0\kerning0
)\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f3\b \cf6 \expnd0\expndtw0\kerning0
    156
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
 \

\f3\b \cf6 \expnd0\expndtw0\kerning0
    157
\f2\b0 \cf0 \expnd0\expndtw0\kerning0
     \cf3 \expnd0\expndtw0\kerning0
def\cf0 \expnd0\expndtw0\kerning0
 _get_crumb\cf5 \expnd0\expndtw0\kerning0
(\cf0 \expnd0\expndtw0\kerning0
self\cf5 \expnd0\expndtw0\kerning0
,\cf0 \expnd0\expndtw0\kerning0
 \cf5 \expnd0\expndtw0\kerning0
*\cf0 \expnd0\expndtw0\kerning0
args\cf5 \expnd0\expndtw0\kerning0
):\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
RemoteDataError\cf0 \expnd0\expndtw0\kerning0
: Unable to read URL: {\field{\*\fldinst{HYPERLINK "https://finance.google.com/finance/historical?q=BAC&startdate=Jan+01%2C+2006&enddate=Jan+01%2C+2016&output=csv"}}{\fldrslt \cf7 \expnd0\expndtw0\kerning0
https://finance.google.com/finance/historical?q=BAC&startdate=Jan+01%2C+2006&enddate=Jan+01%2C+2016&output=csv}}\
Response Text:\
b'<html><head><meta http-equiv="content-type" content="text/html; charset=utf-8"/><title>Sorry...</title><style> body \{ font-family: verdana, arial, sans-serif; background-color: #fff; color: #000; \}</style></head><body><div><table><tr><td><b><font face=sans-serif size=10><font color=#4285f4>G</font><font color=#ea4335>o</font><font color=#fbbc05>o</font><font color=#4285f4>g</font><font color=#34a853>l</font><font color=#ea4335>e</font></font></b></td><td style="text-align: left; vertical-align: bottom; padding-bottom: 15px; width: 50%"><div style="border-bottom: 1px solid #dfdfdf;">Sorry...</div></td></tr></table></div><div style="margin-left: 4em;"><h1>We\\'re sorry...</h1><p>... but your computer or network may be sending automated queries. To protect our users, we can\\'t process your request right now.</p></div><div style="margin-left: 4em;">See <a href="https://support.google.com/websearch/answer/86640">Google Help</a> for more information.<br/><br/></div><div style="text-align: center; border-top: 1px solid #dfdfdf;"><a href="https://www.google.com">Google Home</a></div></body></html>'\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
3. candle has a lot of extra columns compared to google finance.\
\
> BAC.columns\
Index(['Open', 'High', 'Low', 'Close', 'Volume', 'ExDividend', 'SplitRatio',\
       'AdjOpen', 'AdjHigh', 'AdjLow', 'AdjClose', 'AdjVolume'],\
      dtype='object\'92) \cf8 \expnd0\expndtw0\kerning0
\
\
# We only need the first five columns.\
#So dropping the rest.\
\
\pard\pardeftab720\sl280

\f1\fs24 \cf9 \cb10 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 BAC = BAC.drop(['ExDividend', 'SplitRatio','AdjOpen', \
                'AdjHigh', 'AdjLow', 'AdjClose', 'AdjVolume'], axis = 1)\
BAC.head()
\fs20 \
\
\
Reference :  {\field{\*\fldinst{HYPERLINK "https://chrisalbon.com/python/data_wrangling/pandas_dropping_column_and_rows/"}}{\fldrslt https://chrisalbon.com/python/data_wrangling/pandas_dropping_column_and_rows/}}      \'97 df\cf11 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 .\cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 drop\cf12 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 (\cf13 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 'reports'\cf12 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 , \cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 axis\cf11 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 =
\f4\b \cf14 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec14 1
\f1\b0 \cf12 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec12 )\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f2 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 4. The dates were in reverse chronological order.\
So had to sort each dataframe like BAC, C, GS, \'85 in ascending order\
\
#Sort the date index in ascending order\
BAC = BAC.sort_index(ascending = True)\
BAC.head()\
\
\
5. Cross Section .xs command\
\
Reference:  {\field{\*\fldinst{HYPERLINK "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.xs.html"}}{\fldrslt https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.xs.html}}\
\
{\field{\*\fldinst{HYPERLINK "http://www.riptutorial.com/pandas/example/26109/selection-of-cross-sections-using--xs"}}{\fldrslt http://www.riptutorial.com/pandas/example/26109/selection-of-cross-sections-using--xs}}\
\

\fs28 \
6. To get a section of the dates (i.e. rows )\
{\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/29370057/select-dataframe-rows-between-two-dates"}}{\fldrslt https://stackoverflow.com/questions/29370057/select-dataframe-rows-between-two-dates}}\
\
#Get stddev of returns\
start_date = '2015-01-01'\
end_date = '2016-01-01'\
returns[start_date : end_date].std()\
\
7. Calculation of rolling average or moving average\
Ref:\
\
{\field{\*\fldinst{HYPERLINK "https://www.learndatasci.com/tutorials/python-finance-part-3-moving-average-trading-strategy/"}}{\fldrslt https://www.learndatasci.com/tutorials/python-finance-part-3-moving-average-trading-strategy/}}\
}